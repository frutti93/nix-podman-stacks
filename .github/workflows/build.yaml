name: "Build"
on:
  workflow_dispatch:
  push:
    paths:
      - "**.nix"
      - "flake.lock"
      - ".github/workflows/ci.yaml"
      - "images/**"
      - "**.md"

jobs:
  build-config:
    name: Build
    runs-on: ubuntu-24.04
    steps:
      - name: Free diskspace
        uses: easimon/maximize-build-space@master
        with:
          build-mount-path: /nix
          root-reserve-mb: 5120
          remove-dotnet: true
          remove-android: true
          remove-haskell: true
      - uses: actions/checkout@v5
      - name: Install Nix
        uses: cachix/install-nix-action@v31
        with:
          extra_nix_config: "experimental-features = nix-command flakes pipe-operators"
      - name: Restore and cache Nix store
        uses: nix-community/cache-nix-action@v6
        with:
          primary-key: nix-${{ runner.os }}-${{ hashFiles('**/*.nix', '**/flake.lock') }}
          restore-prefixes-first-match: nix-${{ runner.os }}-
          gc-max-store-size-linux: 1073741824
          purge: false
      - name: Build Template Config
        run: nix build ./template#homeConfigurations.myhost.activationPackage
      - name: Build Full Config
        run: nix build .#homeConfigurations.ci.activationPackage

  check_flake:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Install Nix
        uses: cachix/install-nix-action@v31
        with:
          extra_nix_config: "experimental-features = nix-command flakes pipe-operators"
      - name: Check Flake
        run: nix flake check --keep-going

  build-docs:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Install Nix
        uses: cachix/install-nix-action@v31
        with:
          extra_nix_config: "experimental-features = nix-command flakes pipe-operators"
      - name: Build docs
        run: nix build .#book -o result/book
      - name: Build search
        run: nix build .#search -o result/search
      - name: Upload docs
        uses: actions/upload-pages-artifact@v4
        with:
          path: ./result

  publish-docs:
    needs: build-docs
    runs-on: ubuntu-24.04
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      pages: write
      id-token: write
    steps:
      - uses: actions/deploy-pages@v4
