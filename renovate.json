{
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "prHourlyLimit": 0,
  "extends": ["config:recommended", "docker:enableMajor"],
  "timezone": "Europe/Berlin",
  "reviewers": ["Tarow"],
  "gitIgnoredAuthors": ["195547385+tarow[bot]@users.noreply.github.com"],
  "lockFileMaintenance": {
    "enabled": true,
    "schedule": ["* 0-3 * * 0"],
    "automergeType": "branch",
    "automerge": true
  },
  "nix": {
    "enabled": true
  },
  "platformAutomerge": true,
  "automerge": false,
  "automergeType": "pr",
  "packageRules": [
    {
      "matchUpdateTypes": ["minor", "patch", "digest"],
      "matchCurrentVersion": "!/^v?0\\./",
      "automerge": true,
      "automergeType": "branch"
    },
    {
      "matchManagers": ["regex"],
      "additionalBranchPrefix": "{{parentDir}}-"
    },
    {
      "description": "Multi-Container Projects",
      "matchDatasources": ["docker"],
      "matchPackageNames": ["/immich-app/", "/beszel/"],
      "groupName": "{{parentDir}}",
      "automerge": false
    },
    {
      "description": "IT-Tools",
      "matchDatasources": ["docker"],
      "matchPackageNames": ["/it-tools/"],
      "automerge": false
    },
    {
      "description": "Disable Automerge",
      "matchDatasources": ["docker"],
      "matchPackageNames": [
        "/postgres/",
        "/mysql/",
        "/mariadb/",
        "/pgvecto-rs/",
        "/redis/",
        "/meilisearch/"
      ],
      "automerge": false
    },
    {
      "matchDatasources": ["docker"],
      "matchPackageNames": ["/linuxserver/jellyfin/"],
      "allowedVersions": "<1000"
    },
    {
      "matchDatasources": ["docker"],
      "matchPackageNames": ["/linuxserver/qbittorrent/"],
      "allowedVersions": "<14"
    }
  ],
  "customManagers": [
    {
      "customType": "regex",
      "managerFilePatterns": ["/.*\\.nix$/"],
      "matchStrings": [
        "(?<depName>[a-zA-Z0-9_.-]+)\\s*=\\s*\\{[^}]*moduleName\\s*=\\s*\"(?<moduleName>[^\"]+)\";[^}]*version\\s*=\\s*\"(?<currentValue>v?[0-9][^\"]*)\";"
      ],
      "datasourceTemplate": "go",
      "depNameTemplate": "{{{moduleName}}}",
      "versioningTemplate": "semver"
    },
    {
      "customType": "regex",
      "managerFilePatterns": ["/.*\\.nix$/"],
      "matchStrings": [
        "(?:# renovate: versioning=(?<versioning>[^\\s]+)\\s+)?image\\s*=\\s*\"(?<depName>[^:\"]+):(?<currentValue>[^\"\\s]+)\"\\s*;"
      ],
      "datasourceTemplate": "docker",
      "versioningTemplate": "{{#if versioning}}{{{versioning}}}{{else}}docker{{/if}}"
    }
  ]
}
